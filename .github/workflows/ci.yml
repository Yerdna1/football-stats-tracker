name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Check for package-lock.json
      run: |
        if [ ! -f "package-lock.json" ]; then
          echo "package-lock.json not found, creating one..."
          npm install --package-lock-only
        fi
        
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
          ${{ runner.os }}-node-
        
    - name: Install dependencies
      run: |
        if [ ! -d "node_modules" ]; then
          npm ci --prefer-offline --no-audit
        else
          echo "Dependencies already cached"
        fi
      
    - name: Verify package.json scripts
      run: |
        echo "Checking available scripts..."
        npm run --silent 2>/dev/null || true
        
    - name: Run type checking
      run: |
        if npm run --silent 2>/dev/null | grep -q "type-check"; then
          npm run type-check
        else
          echo "type-check script not found, skipping..."
        fi
      
    - name: Run linting
      run: |
        if npm run --silent 2>/dev/null | grep -q "lint"; then
          npm run lint
        else
          echo "lint script not found, skipping..."
        fi
      
    - name: Build application
      run: |
        if npm run --silent 2>/dev/null | grep -q "build"; then
          npm run build
        else
          echo "build script not found, trying Next.js build..."
          npx next build
        fi
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}
        NEXT_PUBLIC_API_FOOTBALL_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_FOOTBALL_BASE_URL }}
