name: Deploy to Firebase Hosting

on:
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types:
      - completed
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Check for package-lock.json
      run: |
        if [ ! -f "package-lock.json" ]; then
          echo "package-lock.json not found, creating one..."
          npm install --package-lock-only
        fi
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
        key: ${{ runner.os }}-node-20-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-20-
          ${{ runner.os }}-node-
        
    - name: Install dependencies
      run: |
        if [ ! -d "node_modules" ]; then
          npm ci --prefer-offline --no-audit
        else
          echo "Dependencies already cached"
        fi
      
    - name: Build application
      run: |
        # Ensure we're not using static export for deployment
        if grep -q 'output.*export' next.config.ts 2>/dev/null; then
          echo "Removing static export configuration for Firebase deployment..."
          sed -i 's/output.*export.*,//g' next.config.ts
          sed -i 's/\/\/.*output.*export.*/\/\/ output: "export", \/\/ Disabled for Firebase deployment/g' next.config.ts
        fi
        npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        NEXT_PUBLIC_API_FOOTBALL_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_FOOTBALL_BASE_URL }}
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy to Firebase
      run: firebase deploy --only hosting --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
